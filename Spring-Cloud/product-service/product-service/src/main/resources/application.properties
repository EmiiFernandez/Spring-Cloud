##Configuración Eureka Client
##Agregar clientes al microservicio de Eureka

##Nombre aplicación
spring.application.name=products-service

##Puerto seleccionado (por defecto 8080)
server.port=8081

##Endpoints habilitados Actuator
management.endpoints.web.exposure.include=health,info

##Para manipular la respuesta de info
management.info.env.enabled=true

##Properties que va a devolver la API info
info.app.name=product-service
info.app.description=microservicio de ejemplo
info.app.version=1.0.0

## Para modificar el host de Eureka y que Actuator
##se redireccione correctamente (el puerto que esta usando el servicio)
eureka.instance.statusPageUrlPath=http://localhost:8080/actuator/info
eureka.instance.healthCheckUrlPath=http://localhost:8080/actuator/health

##Configuración de base de datos

##Configuración de seguridad
##config-server
spring.cloud.config.discovery.enabled=false
spring.cloud.config.discovery.serviceId=config-service

spring.config.import=optional:configserver:

eureka.instance.hostname=localhost

##Config LoadBalancer Round-Robin por peso
##Debemos agregar la información en la metadata
eureka.instance.metadata-map.weight=80

#Config Zipkin
#Le estamos pidiendo que envie todas las trazas que genere 1.0 (100%)
#Podríamos mandar un % menor (Ej: 0.2 -20%-)
management.tracing.sampling.probability=1.0
